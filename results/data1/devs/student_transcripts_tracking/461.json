{
    "conversations": [
        {
            "role": "system",
            "content": "I want you to act as a SQL terminal in front of an example database, you need only to return the sql command to me. Below is an instruction that describes a task, Write a response that appropriately completes the request.\n\n##Instruction:\nstudent_transcripts_tracking contains tables such as student_enrolment, students.\nTable student_enrolment has columns such as student_enrolment_id, degree_program_id, semester_id, student_id, other_details, where degree_program_id is the primary key, semester_id is the primary key, student_id is the primary key.\nTable students has columns such as student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details, where current_address_id is the primary key, permanent_address_id is the primary key.\nThe degree_program_id of degree_programs is the foreign key of degree_program_id of student_enrolment.\nThe semester_id of semesters is the foreign key of semester_id of student_enrolment.\nThe student_id of students is the foreign key of student_id of student_enrolment.\nThe address_id of addresses is the foreign key of current_address_id of students.\nThe address_id of addresses is the foreign key of permanent_address_id of students."
        },
        {
            "role": "user",
            "content": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?"
        },
        {
            "role": "assistant",
            "content": "select t1.student_id , t1.first_name , t1.middle_name , t1.last_name , count(*) , t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1;"
        },
        {
            "role": "result",
            "content": "select t1.last_name , t2.first_name , t2.middle_name , count(*) from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.degree_program_id order by count(*) desc limit 1;"
        }
    ]
}