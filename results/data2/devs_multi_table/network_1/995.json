{
    "conversations": [
        {
            "role": "system",
            "content": "I want you to act as a SQL terminal in front of an example database, you need only to return the sql command to me. Below is an instruction that describes a task, Write a response that appropriately completes the request.\n\n##Instruction:\nnetwork_1 contains tables such as friend, likes, highschooler.\nTable friend has columns such as student_id, friend_id, where student_id is the primary key, friend_id is the primary key.\nTable highschooler has columns such as id, name, grade.\nTable likes has columns such as student_id, liked_id, where liked_id is the primary key, student_id is the primary key.\nThe id of highschooler is the foreign key of student_id of friend.\nThe id of highschooler is the foreign key of friend_id of friend.\nThe id of highschooler is the foreign key of liked_id of likes.\nThe id of highschooler is the foreign key of student_id of likes."
        },
        {
            "role": "user",
            "content": "Show name of all students who have some friends and also are liked by someone else."
        },
        {
            "role": "assistant",
            "content": "SELECT t2.name\nFROM friend AS t1\nJOIN highschooler AS t2 ON t1.student_id = t2.id INTERSECT\nSELECT t2.name\nFROM likes AS t1\nJOIN highschooler AS t2 ON t1.liked_id = t2.id;"
        },
        {
            "role": "result",
            "content": "SELECT t2.name\nFROM friend AS t1\nJOIN highschooler AS t2 ON t1.friend_id = t2.id\nJOIN likes AS t3 ON t1.student_id = t3.student_id\nWHERE t3.liked_id != t1.student_id;"
        }
    ]
}