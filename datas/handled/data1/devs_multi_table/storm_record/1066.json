{
    "conversations": [
        {
            "database": "storm_record",
            "system": "I want you to act as a SQL terminal in front of an example database, you need only to return the sql command to me. Below is an instruction that describes a task, Write a response that appropriately completes the request.\n\n##Instruction:\nstorm_record contains tables such as region, affected_region.\nTable affected_region has columns such as region_id, storm_id, number_city_affected, where region_id is the primary key, storm_id is the primary key.\nTable region has columns such as region_id, region_code, region_name.\nThe region_id of region is the foreign key of region_id of affected_region.\nThe storm_id of storm is the foreign key of storm_id of affected_region.",
            "query": "What are the names of regions with two or more storms?",
            "answer": "select t1.region_name from region as t1 join affected_region as t2 on t1.region_id = t2.region_id group by t1.region_id having count(*) >= 2;",
            "insert": []
        }
    ]
}